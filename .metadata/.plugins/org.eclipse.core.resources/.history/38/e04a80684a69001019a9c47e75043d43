/*
 * Firmware update :
	-Detect di chuyển của bo mạch
		Kết hợp accel (I2C) và gyro (SPI):
		+accel > ngưỡng; gyro ~ 0
		-> đang di chuyển -> di chuyển hướng nào sáng LED hướng đó
		+accel ~ 1; gyro ~ 0
		-> đo hướng trọng lực phát hiện nghiêng -> nghiêng hướng nào LED chớp nhanh hướng đó
	-Detect đang nâng độ cao (4 led cùng sáng)
	-Detect đang hạ độ cao hoặc rơi (4 led chớp nhanh liên lục)
	Firmwareupdate được chuyển vào applicion1
 */
//Chớp tắt led đỏ
#include "main.h"
#define GPIOA_BASE_ADDR	0x40020000
#define GPIOB_BASE_ADDR	0x40020400
#define GPIOC_BASE_ADDR	0x40020800
#define GPIOD_BASE_ADDR 0x40020C00
#define GPIOE_BASE_ADDR 0x40021000
#define GPIOH_BASE_ADDR 0x40021C00
//-------------------------------------------------------------
void Output_Init(uint32_t GPIOx_base, int pin)
{
    // Bật clock GPIO bằng offset
    volatile uint32_t* RCC_AHB1ENR = (uint32_t*)(0x40023800 + 0x30);
    int gpio_bit = (GPIOx_base - 0x40020000) >> 10;
    *RCC_AHB1ENR |= (1 << gpio_bit);

    // MODER = 01 (Output)
    volatile uint32_t* MODER = (uint32_t*)(GPIOx_base + 0x00);
    *MODER &= ~(0b11 << (pin * 2));
    *MODER |=  (0b01 << (pin * 2));
}
//-------------------------------------------------------------
void Input_Init(uint32_t GPIOx_base, int pin)
{
    // Bật clock GPIO bằng offset
    volatile uint32_t* RCC_AHB1ENR = (uint32_t*)(0x40023800 + 0x30);
    int gpio_bit = (GPIOx_base - 0x40020000) >> 10;
    *RCC_AHB1ENR |= (1 << gpio_bit);

    // MODER = 00 (Input)
    volatile uint32_t* MODER = (uint32_t*)(GPIOx_base + 0x00);
    *MODER &= ~(0b11 << (pin * 2));
}
//--------------------------------------------------------------
int Input_State(uint32_t GPIOx_base, int pin)
{
    volatile uint32_t* IDR = (uint32_t*)(GPIOx_base + 0x10);
    uint32_t state = *IDR & (1 << pin);
    return (state >> pin);
}
//--------------------------------------------------------------
void Output_Control(uint32_t GPIOx_base, int pin, int on_off)
{
    volatile uint32_t* BSRR = (uint32_t*)(GPIOx_base + 0x18);
    if (on_off == 1)
    {
        *BSRR = (1 << pin);          // Set pin lên 1
    }
    else
    {
        *BSRR = (1 << (pin + 16));   // Reset pin xuống 0
    }
}

int main()
{
	HAL_Init();
	Output_Init(GPIOD_BASE_ADDR, 12);

	while(1)
	{
		Output_Control(GPIOD_BASE_ADDR, 12, 1);
		HAL_Delay(700);
		Output_Control(GPIOD_BASE_ADDR, 12, 0);
		HAL_Delay(700);
	}
}
